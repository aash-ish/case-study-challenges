CREATE TABLE pubs (
pub_id INT PRIMARY KEY,
pub_name VARCHAR(50),
city VARCHAR(50),
state VARCHAR(50),
country VARCHAR(50)
);
--------------------
-- Create the 'beverages' table
CREATE TABLE beverages (
beverage_id INT PRIMARY KEY,
beverage_name VARCHAR(50),
category VARCHAR(50),
alcohol_content FLOAT,
price_per_unit DECIMAL(8, 2)
);
--------------------
-- Create the 'sales' table
CREATE TABLE sales (
sale_id INT PRIMARY KEY,
pub_id INT,
beverage_id INT,
quantity INT,
transaction_date DATE,
FOREIGN KEY (pub_id) REFERENCES pubs(pub_id),
FOREIGN KEY (beverage_id) REFERENCES beverages(beverage_id)
);
--------------------
-- Create the 'ratings' table 
CREATE TABLE ratings ( rating_id INT PRIMARY KEY, pub_id INT, customer_name VARCHAR(50), rating FLOAT, review TEXT, FOREIGN KEY (pub_id) REFERENCES pubs(pub_id) );
--------------------
-- Insert sample data into the 'pubs' table
INSERT INTO pubs (pub_id, pub_name, city, state, country)
VALUES
(1, 'The Red Lion', 'London', 'England', 'United Kingdom'),
(2, 'The Dubliner', 'Dublin', 'Dublin', 'Ireland'),
(3, 'The Cheers Bar', 'Boston', 'Massachusetts', 'United States'),
(4, 'La Cerveceria', 'Barcelona', 'Catalonia', 'Spain');
--------------------
-- Insert sample data into the 'beverages' table
INSERT INTO beverages (beverage_id, beverage_name, category, alcohol_content, price_per_unit)
VALUES
(1, 'Guinness', 'Beer', 4.2, 5.99),
(2, 'Jameson', 'Whiskey', 40.0, 29.99),
(3, 'Mojito', 'Cocktail', 12.0, 8.99),
(4, 'Chardonnay', 'Wine', 13.5, 12.99),
(5, 'IPA', 'Beer', 6.8, 4.99),
(6, 'Tequila', 'Spirit', 38.0, 24.99);
--------------------
INSERT INTO sales (sale_id, pub_id, beverage_id, quantity, transaction_date)
VALUES
(1, 1, 1, 10, '2023-05-01'),
(2, 1, 2, 5, '2023-05-01'),
(3, 2, 1, 8, '2023-05-01'),
(4, 3, 3, 12, '2023-05-02'),
(5, 4, 4, 3, '2023-05-02'),
(6, 4, 6, 6, '2023-05-03'),
(7, 2, 3, 6, '2023-05-03'),
(8, 3, 1, 15, '2023-05-03'),
(9, 3, 4, 7, '2023-05-03'),
(10, 4, 1, 10, '2023-05-04'),
(11, 1, 3, 5, '2023-05-06'),
(12, 2, 2, 3, '2023-05-09'),
(13, 2, 5, 9, '2023-05-09'),
(14, 3, 6, 4, '2023-05-09'),
(15, 4, 3, 7, '2023-05-09'),
(16, 4, 4, 2, '2023-05-09'),
(17, 1, 4, 6, '2023-05-11'),
(18, 1, 6, 8, '2023-05-11'),
(19, 2, 1, 12, '2023-05-12'),
(20, 3, 5, 5, '2023-05-13');
--------------------
-- Insert sample data into the 'ratings' table
INSERT INTO ratings (rating_id, pub_id, customer_name, rating, review)
VALUES
(1, 1, 'John Smith', 4.5, 'Great pub with a wide selection of beers.'),
(2, 1, 'Emma Johnson', 4.8, 'Excellent service and cozy atmosphere.'),
(3, 2, 'Michael Brown', 4.2, 'Authentic atmosphere and great beers.'),
(4, 3, 'Sophia Davis', 4.6, 'The cocktails were amazing! Will definitely come back.'),
(5, 4, 'Oliver Wilson', 4.9, 'The wine selection here is outstanding.'),
(6, 4, 'Isabella Moore', 4.3, 'Had a great time trying different spirits.'),
(7, 1, 'Sophia Davis', 4.7, 'Loved the pub food! Great ambiance.'),
(8, 2, 'Ethan Johnson', 4.5, 'A good place to hang out with friends.'),
(9, 2, 'Olivia Taylor', 4.1, 'The whiskey tasting experience was fantastic.'),
(10, 3, 'William Miller', 4.4, 'Friendly staff and live music on weekends.');
--------------------

--Q1. How many pubs are located in each country?
select country, count(pub_name) as "total pubs"
from pubs
group by country

--Q2. What is the total sales amount for each pub, including the beverage price and quantity sold?
select pub_name, sum(price_per_unit*quantity) as "total sales amount"
from pubs
join sales using (pub_id) join beverages using (beverage_id)
group by pub_name

--Q3. Which pub has the highest average rating?
select pub_name,avg(rating) as "avg rating"
from pubs
left join ratings using (pub_id)
group by pub_name

--Q4. What are the top 5 beverages by sales quantity across all pubs?
select beverage_name,sum(quantity) as "total quantites sold"
from beverages
join sales using (beverage_id)
group by beverage_name
order by "total quantites sold" desc
limit 5

--Q5. How many sales transactions occurred on each date?
select transaction_date, count(sale_id) as "total sales transactions"
from sales
group by transaction_date
order by transaction_date

--Q6. Find the name of someone that had cocktails and which pub they had it in.
select pub_name, customer_name, category
from beverages
join sales using (beverage_id) join ratings using (pub_id) join pubs using (pub_id)
where beverage_id=3 and category='Cocktail'
																		  
Q--7. What is the average price per unit for each category of beverages, excluding the category 'Spirit'?
select category, round(avg(price_per_unit)) as "average price per unit for each category of beverages"
from beverages
where not category = 'Spirit'
group by category

--Q8. Which pubs have a rating higher than the average rating of all pubs?
with cte1 as 
(select avg(rating) as "overall average rating of pubs"
from ratings),
cte2 as 
(select pub_name, avg(rating) as " average rating of each pub"
from pubs join ratings using (pub_id)
group by pub_name)
select pub_name, "overall average rating of pubs"," average rating of each pub"
from cte1, cte2
where " average rating of each pub">"overall average rating of pubs"
-- or ANOTHER WAY IS
select pub_name, avg(rating) as r
from pubs join ratings using (pub_id)
group by pub_name
having avg(rating)> (select avg(rating) from ratings)

--Q9. What is the running total of sales amount for each pub, ordered by the transaction date?
select pub_name, transaction_date, sum(price_per_unit*quantity) as "total amount by transaction date",
sum(sum(price_per_unit*quantity)) over (partition by pub_name order by transaction_date asc) as running_total
from pubs join sales using (pub_id) join beverages using (beverage_id)
group by pub_name, transaction_date


--Q10. For each country, what is the average price per unit of beverages in each category, and what is the overall average price per unit of beverages across all categories?
select category,country, round(avg(price_per_unit),1) as "average price in different countries for various beverage categories",
 avg(round(avg(price_per_unit),1)) over (partition by category) as "average category price"
 from pubs join sales using (pub_id) join beverages using (beverage_id)
 group by category, country
 

--Q11. For each pub, what is the percentage contribution of each category of beverages to the total sales amount, and what is the pub's overall sales amount?
 select sq.*, (sq."pub_beverage_category_revenue"/sq."pub_revenue")*100 as "contribution"
 from (select pub_name, category, round(sum(price_per_unit*quantity)) as "pub_beverage_category_revenue",
 sum(sum(price_per_unit*quantity)) over (partition by pub_name) as "pub_revenue"
 from beverages join sales using (beverage_id) join pubs using (pub_id)
 group by pub_name, category) as sq
 order by pub_name
